
services:
  db:
    image: postgres:16-alpine
    container_name: todo-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "8092:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    container_name: todo-server
    restart: unless-stopped
    ports:
      - "8093:3000"
    env_file:
      - apps/server/.env.production
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:password@db:5432/db?schema=todo
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  client:
    build:
      context: .
      dockerfile: apps/client/Dockerfile
    container_name: todo-client
    env_file:
      - apps/server/.env.production
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    ports:
      - "8091:80"
    depends_on:
      - server

volumes:
  postgres_data:
    driver: local
